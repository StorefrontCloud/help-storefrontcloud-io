(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{373:function(n,t,e){"use strict";e.r(t);var o=e(42),a=Object(o.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"configuration-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration-files"}},[n._v("#")]),n._v(" Configuration files")]),n._v(" "),e("p",[n._v("Configuration of your instance application, both the front application and the API application, is managed (merged) by module "),e("a",{attrs:{href:"https://github.com/lorenwest/node-config",target:"_blank",rel:"noopener noreferrer"}},[n._v("node-config"),e("OutboundLink")],1),n._v(".")]),n._v(" "),e("p",[n._v("For both instances, we crate file "),e("code",[n._v("local-cloud.json")]),n._v(" which overrides your default configuration. We do it because some parts of your instance configuration in a cloud environment should be constant, e.g., Redis host, ElasticSerach host, API host and API endpoints. The file is named local-cloud.json because the patter for the name is "),e("code",[n._v("local-{deployment}.EXT")]),n._v(", and we set "),e("code",[n._v("{deployment}")]),n._v(" by environment variable $NODE_CONFIG_ENV to "),e("code",[n._v("cloud")]),n._v(". To better understand how the name of files should be created and what is the order of merging configuration please read the "),e("a",{attrs:{href:"https://github.com/lorenwest/node-config/wiki/Configuration-Files#multi-instance-deployments",target:"_blank",rel:"noopener noreferrer"}},[n._v("module documentation"),e("OutboundLink")],1)]),n._v(" "),e("h2",{attrs:{id:"our-local-cloud-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#our-local-cloud-json"}},[n._v("#")]),n._v(" Our local-cloud.json")]),n._v(" "),e("p",[n._v("The default template for the front application, file "),e("code",[n._v("local-cloud.json")]),n._v(" is below.")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('    {\n      "server": {\n        "dynamicConfigReload": true,\n        "dynamicConfigInclude": [\n          "redis",\n          "elasticsearch",\n          "graphql",\n          "cart",\n          "products",\n          "reviews",\n          "orders",\n          "users",\n          "stock",\n          "mailchimp",\n          "mailer"\n        ]\n      },\n      "redis": {\n        "host": "redis"\n      },\n      "api": {\n        "url": "https://[[your_domain]]"\n      },\n      "elasticsearch": {\n        "host": "/api/catalog"\n      },\n      "graphql": {\n        "host": "https://[[your_domain]]/graphql"\n      },\n      "cart": {\n        "create_endpoint": "https://[[your_domain]]/api/cart/create?token={{ "{{" }}token{{ "}}" }}",\n        "updateitem_endpoint": "https://[[your_domain]]/api/cart/update?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "deleteitem_endpoint": "https://[[your_domain]]/api/cart/delete?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "pull_endpoint": "https://[[your_domain]]/api/cart/pull?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "totals_endpoint": "https://[[your_domain]]/api/cart/totals?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "paymentmethods_endpoint": "https://[[your_domain]]/api/cart/payment-methods?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "shippingmethods_endpoint": "https://[[your_domain]]/api/cart/shipping-methods?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "shippinginfo_endpoint": "https://[[your_domain]]/api/cart/shipping-information?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "collecttotals_endpoint": "https://[[your_domain]]/api/cart/collect-totals?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "deletecoupon_endpoint": "https://[[your_domain]]/api/cart/delete-coupon?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId{{ "}}" }}",\n        "applycoupon_endpoint": "https://[[your_domain]]/api/cart/apply-coupon?token={{ "{{" }}token}}&cartId={{ "{{" }}cartId}}&coupon={{ "{{" }}coupon{{ "}}" }}"\n      },\n      "products": {\n        "endpoint": "https://[[your_domain]]/api/product"\n      },\n      "reviews": {\n        "create_endpoint": "https://[[your_domain]]/api/review/create"\n      },\n      "orders": {\n        "endpoint": "https://[[your_domain]]/api/order"\n      },\n      "users": {\n        "endpoint": "https://[[your_domain]]/api/user",\n        "history_endpoint": "https://[[your_domain]]/api/user/order-history?token={{ "{{" }}token{{ "}}" }}",\n        "resetPassword_endpoint": "https://[[your_domain]]/api/user/resetPassword",\n        "changePassword_endpoint": "https://[[your_domain]]/api/user/changePassword?token={{ "{{" }}token{{ "}}" }}",\n        "login_endpoint": "https://[[your_domain]]/api/user/login",\n        "create_endpoint": "https://[[your_domain]]/api/user/create",\n        "me_endpoint": "https://[[your_domain]]/api/user/me?token={{ "{{" }}token{{ "}}" }}",\n        "refresh_endpoint": "https://[[your_domain]]/api/user/refresh"\n      },\n      "stock": {\n        "endpoint": "https://[[your_domain]]/api/stock"\n      },\n      "mailchimp": {\n        "endpoint": "https://[[your_domain]]/api/ext/mailchimp-subscribe/subscribe"\n      },\n      "mailer": {\n        "endpoint": {\n          "send": "https://[[your_domain]]/api/ext/mail-service/send-email",\n          "token": "https://[[your_domain]]/api/ext/mail-service/get-token"\n        }\n      }\n    }\n')])])]),e("p",[n._v("By default template for API application file "),e("code",[n._v("local-cloud.json")]),n._v(" is an empty JSON "),e("code",[n._v("{}")]),n._v(".")]),n._v(" "),e("p",[n._v("For both files, the configuration can change. Always, the config file for your instance is available in pods. You can check it using CLI tool or directly using kubeconfig.")]),n._v(" "),e("h2",{attrs:{id:"overreading-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overreading-configuration"}},[n._v("#")]),n._v(" Overreading configuration")]),n._v(" "),e("p",[n._v("If for some reason, the default configuration is not sufficient for you, you can override it by file create according to the pattern "),e("code",[n._v("local- {deployment} - {instance} .EXT")]),n._v(". "),e("code",[n._v("{deployment}")]),n._v(" value is always "),e("code",[n._v("cloud")]),n._v(". Default value of "),e("code",[n._v("{instance}")]),n._v(" is "),e("code",[n._v("prod")]),n._v(". In case when you have more than one instance it can be "),e("code",[n._v("stage")]),n._v(" or"),e("code",[n._v("test")]),n._v(". You can check it by running command "),e("code",[n._v("echo $ NODE_APP_INSTANCE")]),n._v(" on the pods of your instance.")])])}),[],!1,null,null,null);t.default=a.exports}}]);