(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{356:function(e,n,t){"use strict";t.r(n);var o=t(42),a=Object(o.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[e._v("#")]),e._v(" Deployment")]),e._v(" "),t("p",[e._v("All commits merged to develop branch and all tags are deployed automatically. To the test environment for develop branch and to the production environment for tags. The code below is a standard configuration for the build stage in both Vue Storefront and Vue Storefront API applications, but for the API "),t("code",[e._v("frontContainerVersion")]),e._v(" is replaced by "),t("code",[e._v("apiContainerVersion")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('deploy-to-staging:\n  stage: deploy\n  image: alpine\n  script:\n    - apk add --no-cache curl\n    - >\n      curl -H "Content-Type: application/json" -X POST -d "{\\"code\\":\\"{{ instance_name }}-test\\", \\"frontContainerVersion\\":\\"${CI_COMMIT_SHA:0:8}\\"}" http://10.29.1.1:4000/instances\n  environment:\n    name: staging\n    url: https://{{ instance_name }}-test.storefrontcloud.io/\n  only:\n    - develop\n\ndeploy-to-prod:\n  stage: deploy\n  image: alpine\n  script:\n    - apk add --no-cache curl\n    - >\n      curl -H "Content-Type: application/json" -X POST -d "{\\"code\\":\\"{{ instance_name }}\\", \\"frontContainerVersion\\":\\"$CI_COMMIT_TAG\\"}" http://10.29.1.1:4000/instances\n  environment:\n    name: prod\n    url: https://{{ instance_domain }}/\n  only:\n    - tags\n')])])]),t("p",[e._v("How read this configuration? For us most importan part is "),t("code",[e._v("script")]),e._v(" definition. Ther is only call to our tool responsible for deploy by "),t("code",[e._v("curl")]),e._v(". The tool is available only for runners on address "),t("code",[e._v("http://10.29.1.1:4000/")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"deploy-check"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy-check"}},[e._v("#")]),e._v(" Deploy Check")]),e._v(" "),t("p",[e._v("In stage "),t("code",[e._v("deploy-to-staging-check")]),e._v(" and "),t("code",[e._v("deploy-to-prod-check")]),e._v(" is run a script which confirms deployment success. For success deployment output will be similar to below:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Downloading artifacts from coordinator... ok        id=7150 responseStatus=200 OK token=hnrBT1oP\n$ cd /usr/src/app\n$ echo $KUBE_CONFIG_TEST | base64 --decode > /tmp/kubeconfig\n$ bundle exec ruby deploy_checker.rb --tag ${CI_COMMIT_SHA:0:8} --kubeconfig /tmp/kubeconfig --namespace test-storefrontcloud-io\n.................................................................................................................\nGreat news! Deploy succeeded!\nJob succeeded\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);